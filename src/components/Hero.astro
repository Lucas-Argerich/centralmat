---
interface Props {
  src: string
  placeholder?: string
  height: string
  plain?: boolean
}

const { src, placeholder = '', height, plain = false } = Astro.props
---

<section style={{ height }}>
  <div
    class="blurredBackground"
    style={{ backgroundImage: 'url(' + placeholder + ')' }}
    aria-hidden="true"
  >
    <img src={src} alt="imagen de fondo" aria-hidden="true" />
    <span class="overlay" style={plain ? { background: '#2e2e2e7f' } : {}}></span>
  </div>
  <div class="center">
    <slot />
  </div>
</section>

<style>
  section {
    width: 100%;
    overflow: hidden;
    position: relative;
  }

  .blurredBackground {
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    position: relative;
  }

  .blurredBackground img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 1s ease-in-out;
  }

  .blurredBackground.loaded img {
    opacity: 1;
  }

  .overlay {
    position: absolute;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      50% 50% at 50% 50%,
      rgba(46, 46, 46, 0) 0%,
      rgba(46, 46, 46, 0.5) 100%
    );
    backdrop-filter: blur(10px);
    transition: backdrop-filter 1s ease-in-out;
  }

  .blurredBackground.loaded .overlay {
    backdrop-filter: none;
  }

  .center {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 20px;
  }
</style>

<script>
  const blurredBackground = document.querySelector('.blurredBackground');
  const img = blurredBackground?.querySelector('img');
  function loaded() {
    blurredBackground?.classList.add('loaded');
  }
  if (img?.complete) {
    loaded();
  } else {
    img?.addEventListener('load', loaded);
  }
</script>
