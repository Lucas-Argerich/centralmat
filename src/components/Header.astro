---
import { Home, Package, Wrench, Users, Phone, ChevronRight, X } from 'lucide-astro';
---

<header class="sticky top-0 z-50 flex items-center justify-between gap-6 px-2 h-16 shadow-md bg-[var(--color-light)] md:px-15 xs:px-6 transition-all duration-300" id="main-header">
  <div class="h-full flex overflow-hidden">
    <a href="/" class="h-full transition-all duration-300 hover:scale-105 group">
      <img class="w-56 h-full object-cover transition-transform duration-300 group-hover:brightness-110" src="/img/logo1.png" alt="Logo de CentralMat" />
    </a>
  </div>
  <button 
    id="hamburger" 
    class="sm:hidden flex flex-col gap-1.5 cursor-pointer p-2 rounded-lg hover:bg-[var(--color-secondary)]/10 transition-all duration-200 active:scale-95" 
    aria-label="Abrir menú de navegación"
  >
    <span class="block w-7 h-0.5 bg-[var(--color-secondary)] transition-all duration-300 origin-center"></span>
    <span class="block w-7 h-0.5 bg-[var(--color-secondary)] transition-all duration-300 origin-center"></span>
    <span class="block w-7 h-0.5 bg-[var(--color-secondary)] transition-all duration-300 origin-center"></span>
  </button>
  <div class="fixed sm:hidden inset-0 bg-black/50 backdrop-blur-sm opacity-0 pointer-events-none transition-all duration-300" id="menu-backdrop"></div>
  <nav 
    class="fixed sm:relative top-16 left-0 w-full h-[calc(100dvh-4rem)] sm:h-auto hidden flex-col sm:flex items-center sm:items-end gap-10 px-10 bg-[var(--color-light)] sm:bg-transparent translate-y-full sm:translate-none transition-all duration-300 ease-in-out shadow-lg sm:shadow-none overflow-y-auto sm:overflow-visible"
    id="nav-menu"
  >
    <div class="sm:hidden w-full flex justify-center pt-6">
      <img class="h-24 w-36 object-cover transition-all duration-300 hover:scale-105 hover:brightness-110" src="/img/logo2.png" alt="Logo de CentralMat" />
    </div>
    <ul class="flex gap-6 list-none flex-col items-center sm:flex-row sm:gap-8">
      {
        [
          {
            title: 'INICIO',
            href: '/',
            icon: Home
          },
          {
            title: 'PRODUCTOS',
            href: '/productos',
            icon: Package
          },
          {
            title: 'SERVICIOS',
            href: '/servicios',
            icon: Wrench
          },
          {
            title: 'NOSOTROS',
            href: '/nosotros',
            icon: Users
          },
          {
            title: 'CONTACTO',
            href: '/contacto',
            icon: Phone
          }
        ].map(({ title, href, icon: Icon }) => (
          <li class="relative group">
            <a 
              href={href} 
              class="text-[var(--color-secondary)] font-semibold text-sm tracking-wide relative py-2 px-3 after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-[var(--color-secondary)] after:opacity-0 after:transition-all after:duration-300 hover:after:opacity-100 hover:text-[var(--color-secondary)]/80 transition-all duration-200 [&.active]:after:opacity-100 flex items-center gap-2 rounded-lg hover:bg-[var(--color-secondary)]/5"
            >
              <Icon 
                class="sm:hidden w-5 h-5 transition-transform duration-200 group-hover:scale-110" 
                stroke-width={1.5}
                aria-hidden="true"
              />
              {title}
              <ChevronRight 
                class="absolute -right-2 top-1/2 -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 sm:hidden w-4 h-4" 
                stroke-width={2}
                aria-hidden="true"
              />
            </a>
          </li>
        ))
      }
    </ul>
    <button 
      class="flex sm:hidden p-2 rounded-full hover:bg-[var(--color-secondary)]/10 transition-all duration-200 active:scale-95"
      aria-label="Cerrar menú"
    >
      <X 
        class="w-6 h-6 transition-transform duration-300 hover:rotate-90" 
        stroke-width={1.5}
        aria-hidden="true"
      />
    </button>
  </nav>
</header>

<script>
  const hamburger = document.querySelector('#hamburger');
  const nav = document.querySelector('#nav-menu');
  const backdrop = document.querySelector('#menu-backdrop');
  const close = document.querySelector('nav button');
  const navLinks = document.querySelectorAll('nav a');
  const header = document.querySelector('#main-header');
  let lastScroll = 0;

  // Set active link based on current path
  const currentPath = window.location.pathname;
  navLinks.forEach(link => {
    if (link.getAttribute('href') === currentPath) {
      link.classList.add('active');
    }
  });

  // Header scroll effect
  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;
    
    if (currentScroll <= 0) {
      header?.classList.remove('shadow-lg', 'bg-[var(--color-light)]/95', 'backdrop-blur-sm');
      return;
    }
    
    if (currentScroll > lastScroll && currentScroll > 100) {
      // Scrolling down
      header?.classList.add('-translate-y-full');
    } else {
      // Scrolling up
      header?.classList.remove('-translate-y-full');
      header?.classList.add('shadow-lg', 'bg-[var(--color-light)]/95', 'backdrop-blur-sm');
    }
    
    lastScroll = currentScroll;
  });

  function toggleMenu(show: boolean) {
    if (show) {
      // Reset header position when opening menu
      header?.classList.remove('-translate-y-full');
      header?.classList.add('shadow-lg', 'bg-[var(--color-light)]/95', 'backdrop-blur-sm');
      
      nav?.classList.remove('hidden');
      // Force a reflow to ensure the transition works
      (nav as HTMLElement)?.offsetHeight;
      nav?.classList.add('flex');
      nav?.classList.remove('translate-y-full');
      backdrop?.classList.remove('opacity-0', 'pointer-events-none');
      document.body.style.overflow = 'hidden';
      
      // Animate hamburger to X
      const spans = hamburger?.querySelectorAll('span');
      spans?.forEach((span, index) => {
        if (index === 0) span.style.transform = 'translateY(8px) rotate(45deg)';
        if (index === 1) span.style.opacity = '0';
        if (index === 2) span.style.transform = 'translateY(-8px) rotate(-45deg)';
      });
    } else {
      // First add the translation class to trigger the animation
      nav?.classList.add('translate-y-full');
      backdrop?.classList.add('opacity-0', 'pointer-events-none');
      
      // Reset hamburger animation
      const spans = hamburger?.querySelectorAll('span');
      spans?.forEach(span => {
        span.style.transform = '';
        span.style.opacity = '';
      });
      
      // Wait for the translation animation to complete before hiding
      nav?.addEventListener('transitionend', function handler() {
        nav?.classList.add('hidden');
        nav?.classList.remove('flex');
        nav?.removeEventListener('transitionend', handler);
        document.body.style.overflow = '';
      }, { once: true });
    }
  }

  hamburger?.addEventListener('click', () => toggleMenu(true));
  close?.addEventListener('click', () => toggleMenu(false));
  backdrop?.addEventListener('click', () => toggleMenu(false));

  // Close menu on window resize if open
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 640 && !nav?.classList.contains('hidden')) {
      toggleMenu(false);
    }
  });

  // Add hover effect for desktop navigation
  if (window.innerWidth >= 640) {
    navLinks.forEach(link => {
      link.addEventListener('mouseenter', (e) => {
        const target = e.currentTarget as HTMLElement;
        target.style.transform = 'translateY(-2px)';
      });
      
      link.addEventListener('mouseleave', (e) => {
        const target = e.currentTarget as HTMLElement;
        target.style.transform = '';
      });
    });
  }
</script>
